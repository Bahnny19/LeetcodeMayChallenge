*Contiguous Array*

Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

************************************************************************************************************************************

Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.

Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.

Note: The length of the given binary array will not exceed 50,000.

************************************************************************************************************************************

class Solution:
    def findMaxLength(self, nums: List[int]) -> int:
        c=0
        maxlength=0
        table = {0:-1}
        for i in range(len(nums)) :
            c = c+1 if nums[i]== 1 else c-1
            if c in table :
                maxlength = max(maxlength, i - table[c])
            else:
                table[c] = i;
        return maxlength;        
        
************************************************************************************************************************************

555 / 555 test cases passed.
Status: Accepted
Runtime: 940 ms
Memory Usage: 18.2 MB
